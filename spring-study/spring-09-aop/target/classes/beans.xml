<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
">
    <!--注册bean-->
    <bean id="userService" class="com.zhudake.service.UserServiceImpl"></bean>

    <bean id="beforeLog" class="com.zhudake.log.LogAfter"/>
    <bean id="afterLog" class="com.zhudake.log.LogBefore"/>

    <!--方式一：使用原生Spring API接口-->

    <!--配置aop:需要导入aop的约束-->
<!--    <aop:config>
        &lt;!&ndash;切入点：expression：表达式，execution(要执行的位置！* * * * *)&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* com.zhudake.service.UserServiceImpl.*(..))"/>
        &lt;!&ndash;执行环绕增加！&ndash;&gt;
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>-->


<!--    &lt;!&ndash;方式二：自定义实现AOP&ndash;&gt;
    <bean id="diyAop" class="com.zhudake.diyAop.DiyAop"/>

    <aop:config>
        &lt;!&ndash;自定义切面、ref要引用的切面类&ndash;&gt;
        <aop:aspect ref="diyAop">
            &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="pointCut" expression="execution(* com.zhudake.service.UserServiceImpl.*(..))"/>
            &lt;!&ndash;通知&ndash;&gt;
            <aop:before method="before" pointcut-ref="pointCut"/>
            <aop:after method="after" pointcut-ref="pointCut"/>
        </aop:aspect>
    </aop:config>-->


    <!--方式三：注解实现AOP-->
    <bean id="annotationAop" class="com.zhudake.anntoation.AnnotationAop"/>
    <aop:aspectj-autoproxy/>
</beans>